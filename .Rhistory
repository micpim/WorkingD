hist(zz.2$f.anox.p)
d1 <- density(zz.2$f.anox.p)
d3 <- density(zz.2$D.anox)
d5 <- density(zz.2$dur.p)
d6 <- density(zz.2$f.anox.a)
#pdf("abc.parameters.density.pdf", h=8, w=6)
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 0.25))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black")
StratTimes <- 252500000 - times
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
U238.ocean.distance <- U238.ocean[,myvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.2,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)) {lines(U238.ocean.distance[,i]~StratTimes, cex=0.1, col=rgb(0, 0, 255, max = 255, alpha = 30))}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
firstPercent <- quantile(zz.1$dist, c(0.005))
#Subset of ZZ1 where distance is less than first percentile of dist
zz.2 <- subset(zz.1, distance <= firstPercent & distance < dist + 3)
hist(zz.2$distance)
plot(zz.2$Comp.1~zz.2$f.anox.p)
hist(zz.1$f.anox.p)
hist(zz.2$f.anox.p)
d1 <- density(zz.2$f.anox.p)
d3 <- density(zz.2$D.anox)
d5 <- density(zz.2$dur.p)
d6 <- density(zz.2$f.anox.a)
#pdf("abc.parameters.density.pdf", h=8, w=6)
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 0.25))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black")
StratTimes <- 252500000 - times
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
U238.ocean.distance <- U238.ocean[,myvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.2,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)) {lines(U238.ocean.distance[,i]~StratTimes, cex=0.1, col=rgb(0, 0, 255, max = 255, alpha = 30))}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
perturbation
f.anox.p
load("~/Desktop/Model Runs/Rdata/50K_0to100.RData")
DU238.ocean$mod.age <- BoundaryAges
DU238.ocean$realdata <- BoundaryUfrac
ModelAndReal <- DU238.ocean[,1:(nreps)]
ModelAndReal[,(nreps +1)] <- DU238.ocean$realdata
#Same But with fei fei
feifeiU238$mod.age <- FeiAge2
feifeiU238$realdata <- FeiUfrac2
modelAndreal <- feifeiU238[,1:(nreps)]
modelAndreal[,(nreps +1)] <- feifeiU238$realdata
#FEI FEI OR KIM
kim = ModelAndReal
fei = modelAndreal
run = fei
#standardize
mod.ufrac <- as.matrix(run)
m.ufrac <- (mod.ufrac-mean(mod.ufrac))/sd(mod.ufrac)
#plot(DU238.ocean$mod.age~ModelAndReal[,3], las=1)
#TRANSPOSE?
pca <- princomp(t(m.ufrac))
PoV <- pca$sdev^2/sum(pca$sdev^2)
par(mfrow=c(1,1))
plot(100*PoV[PoV>0.01], pch=1, las=1, ylab="Percent Variance Explained",
xlab="Principal Component")
lines(100*PoV[PoV>0.01])
#dev.off()
zz <- as.data.frame(pca$scores[,1:6])
### APPROXIMATE BAYES COMPUTATION ###
ref<-zz[nreps,]
zz$distance <- apply(zz,1,function(x)sqrt(sum((x-ref)^2)))
##combine pca scores and distance with parameter values##
zz.1 <- cbind(params, zz[1:nreps,])
#need to figure out how to color code by parameter values
rbPal <- colorRampPalette(c('yellow', 'black'))
#This adds a column of color values
# based on the y values
zz.1$Col.D.anox <- rbPal(100)[as.numeric(cut(zz.1$D.anox,breaks = 100))]
zz.1$Col.f.anox.p <- rbPal(100)[as.numeric(cut(zz.1$f.anox.p,breaks = 100))]
zz.1$Col.dur.p <- rbPal(100)[as.numeric(cut(zz.1$dur.p,breaks = 100))]
zz.1$Col.distance <- rbPal(100)[as.numeric(cut(zz.1$distance, breaks = 100))]
zz.1$Col.f.anox.a <- rbPal(100)[as.numeric(cut(zz.1$f.anox.a, breaks = 100))]
cols <- list(zz.1$Col..1$D.other, zz.1$Col.D.anox, zz.1$Col.f.anox.b, zz.1$Col.f.anox.p, zz.1$Col.dur.p,zz.1$f.anox.a, zz.1$Col.distance)
titles <- c("D.anox", "f.anox.p", "dur.p", "f.anox.a", "distance")
lim.lower <- c( min(params$D.anox),
min(params$f.anox.p), min(params$dur.p), min(params$f.anox.a)/100000, min(zz.1$distance))
lim.upper <- c( max(params$D.anox),
max(params$f.anox.p), max(params$dur.p), max(params$f.anox.a)/100000, max(zz.1$distance))
### get parameter values via approximate bayes computation ###
hist(zz.1$f.anox.p)
hist(zz.1$distance)
dist <- min(zz.1$distance)
#Write line, that finds the first percentile , whats the value at first percent
firstPercent <- quantile(zz.1$dist, c(0.005))
#Subset of ZZ1 where distance is less than first percentile of dist
zz.2 <- subset(zz.1, distance <= firstPercent & distance < dist + 3)
hist(zz.2$distance)
plot(zz.2$Comp.1~zz.2$f.anox.p)
hist(zz.1$f.anox.p)
hist(zz.2$f.anox.p)
d1 <- density(zz.2$f.anox.p)
d3 <- density(zz.2$D.anox)
d5 <- density(zz.2$dur.p)
d6 <- density(zz.2$f.anox.a)
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 0.25))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black")
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 1))
polygon(d1, col="red", border="black")
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 1))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black")
StratTimes <- 252500000 - times
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
U238.ocean.distance <- U238.ocean[,myvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.2,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)) {lines(U238.ocean.distance[,i]~StratTimes, cex=0.1, col=rgb(0, 0, 255, max = 255, alpha = 30))}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
run = kim
#standardize
mod.ufrac <- as.matrix(run)
m.ufrac <- (mod.ufrac-mean(mod.ufrac))/sd(mod.ufrac)
#plot(DU238.ocean$mod.age~ModelAndReal[,3], las=1)
#TRANSPOSE?
pca <- princomp(t(m.ufrac))
PoV <- pca$sdev^2/sum(pca$sdev^2)
par(mfrow=c(1,1))
plot(100*PoV[PoV>0.01], pch=1, las=1, ylab="Percent Variance Explained",
xlab="Principal Component")
lines(100*PoV[PoV>0.01])
#dev.off()
zz <- as.data.frame(pca$scores[,1:6])
### APPROXIMATE BAYES COMPUTATION ###
ref<-zz[nreps,]
zz$distance <- apply(zz,1,function(x)sqrt(sum((x-ref)^2)))
##combine pca scores and distance with parameter values##
zz.1 <- cbind(params, zz[1:nreps,])
#need to figure out how to color code by parameter values
rbPal <- colorRampPalette(c('yellow', 'black'))
#This adds a column of color values
# based on the y values
zz.1$Col.D.anox <- rbPal(100)[as.numeric(cut(zz.1$D.anox,breaks = 100))]
zz.1$Col.f.anox.p <- rbPal(100)[as.numeric(cut(zz.1$f.anox.p,breaks = 100))]
zz.1$Col.dur.p <- rbPal(100)[as.numeric(cut(zz.1$dur.p,breaks = 100))]
zz.1$Col.distance <- rbPal(100)[as.numeric(cut(zz.1$distance, breaks = 100))]
zz.1$Col.f.anox.a <- rbPal(100)[as.numeric(cut(zz.1$f.anox.a, breaks = 100))]
cols <- list(zz.1$Col..1$D.other, zz.1$Col.D.anox, zz.1$Col.f.anox.b, zz.1$Col.f.anox.p, zz.1$Col.dur.p,zz.1$f.anox.a, zz.1$Col.distance)
titles <- c("D.anox", "f.anox.p", "dur.p", "f.anox.a", "distance")
lim.lower <- c( min(params$D.anox),
min(params$f.anox.p), min(params$dur.p), min(params$f.anox.a)/100000, min(zz.1$distance))
lim.upper <- c( max(params$D.anox),
max(params$f.anox.p), max(params$dur.p), max(params$f.anox.a)/100000, max(zz.1$distance))
### get parameter values via approximate bayes computation ###
hist(zz.1$f.anox.p)
hist(zz.1$distance)
dist <- min(zz.1$distance)
#Write line, that finds the first percentile , whats the value at first percent
firstPercent <- quantile(zz.1$dist, c(0.005))
#Subset of ZZ1 where distance is less than first percentile of dist
zz.2 <- subset(zz.1, distance <= firstPercent & distance < dist + 3)
hist(zz.2$distance)
plot(zz.2$Comp.1~zz.2$f.anox.p)
hist(zz.1$f.anox.p)
hist(zz.2$f.anox.p)
d1 <- density(zz.2$f.anox.p)
d3 <- density(zz.2$D.anox)
d5 <- density(zz.2$dur.p)
d6 <- density(zz.2$f.anox.a)
#pdf("abc.parameters.density.pdf", h=8, w=6)
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 1))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black")
StratTimes <- 252500000 - times
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
U238.ocean.distance <- U238.ocean[,myvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.2,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)) {lines(U238.ocean.distance[,i]~StratTimes, cex=0.1, col=rgb(0, 0, 255, max = 255, alpha = 30))}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
firstPercent <- quantile(zz.1$dist, c(0.0025))
#Subset of ZZ1 where distance is less than first percentile of dist
zz.2 <- subset(zz.1, distance <= firstPercent & distance < dist + 3)
hist(zz.2$distance)
plot(zz.2$Comp.1~zz.2$f.anox.p)
hist(zz.1$f.anox.p)
hist(zz.2$f.anox.p)
d1 <- density(zz.2$f.anox.p)
d3 <- density(zz.2$D.anox)
d5 <- density(zz.2$dur.p)
d6 <- density(zz.2$f.anox.a)
#pdf("abc.parameters.density.pdf", h=8, w=6)
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 1))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black")
StratTimes <- 252500000 - times
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
U238.ocean.distance <- U238.ocean[,myvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.2,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)) {lines(U238.ocean.distance[,i]~StratTimes, cex=0.1, col=rgb(0, 0, 255, max = 255, alpha = 30))}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
run = fei
#standardize
mod.ufrac <- as.matrix(run)
m.ufrac <- (mod.ufrac-mean(mod.ufrac))/sd(mod.ufrac)
#plot(DU238.ocean$mod.age~ModelAndReal[,3], las=1)
#TRANSPOSE?
pca <- princomp(t(m.ufrac))
PoV <- pca$sdev^2/sum(pca$sdev^2)
par(mfrow=c(1,1))
plot(100*PoV[PoV>0.01], pch=1, las=1, ylab="Percent Variance Explained",
xlab="Principal Component")
lines(100*PoV[PoV>0.01])
#dev.off()
zz <- as.data.frame(pca$scores[,1:6])
### APPROXIMATE BAYES COMPUTATION ###
ref<-zz[nreps,]
zz$distance <- apply(zz,1,function(x)sqrt(sum((x-ref)^2)))
##combine pca scores and distance with parameter values##
zz.1 <- cbind(params, zz[1:nreps,])
#need to figure out how to color code by parameter values
rbPal <- colorRampPalette(c('yellow', 'black'))
#This adds a column of color values
# based on the y values
zz.1$Col.D.anox <- rbPal(100)[as.numeric(cut(zz.1$D.anox,breaks = 100))]
zz.1$Col.f.anox.p <- rbPal(100)[as.numeric(cut(zz.1$f.anox.p,breaks = 100))]
zz.1$Col.dur.p <- rbPal(100)[as.numeric(cut(zz.1$dur.p,breaks = 100))]
zz.1$Col.distance <- rbPal(100)[as.numeric(cut(zz.1$distance, breaks = 100))]
zz.1$Col.f.anox.a <- rbPal(100)[as.numeric(cut(zz.1$f.anox.a, breaks = 100))]
cols <- list(zz.1$Col..1$D.other, zz.1$Col.D.anox, zz.1$Col.f.anox.b, zz.1$Col.f.anox.p, zz.1$Col.dur.p,zz.1$f.anox.a, zz.1$Col.distance)
titles <- c("D.anox", "f.anox.p", "dur.p", "f.anox.a", "distance")
lim.lower <- c( min(params$D.anox),
min(params$f.anox.p), min(params$dur.p), min(params$f.anox.a)/100000, min(zz.1$distance))
lim.upper <- c( max(params$D.anox),
max(params$f.anox.p), max(params$dur.p), max(params$f.anox.a)/100000, max(zz.1$distance))
### get parameter values via approximate bayes computation ###
hist(zz.1$f.anox.p)
hist(zz.1$distance)
dist <- min(zz.1$distance)
#Write line, that finds the first percentile , whats the value at first percent
firstPercent <- quantile(zz.1$dist, c(0.0025))
#Subset of ZZ1 where distance is less than first percentile of dist
zz.2 <- subset(zz.1, distance <= firstPercent & distance < dist + 3)
hist(zz.2$distance)
plot(zz.2$Comp.1~zz.2$f.anox.p)
hist(zz.1$f.anox.p)
hist(zz.2$f.anox.p)
d1 <- density(zz.2$f.anox.p)
d3 <- density(zz.2$D.anox)
d5 <- density(zz.2$dur.p)
d6 <- density(zz.2$f.anox.a)
#pdf("abc.parameters.density.pdf", h=8, w=6)
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 1))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black")
StratTimes <- 252500000 - times
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
U238.ocean.distance <- U238.ocean[,myvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.2,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)) {lines(U238.ocean.distance[,i]~StratTimes, cex=0.1, col=rgb(0, 0, 255, max = 255, alpha = 30))}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
firstPercent <- quantile(zz.1$dist, c(0.0020))
#Subset of ZZ1 where distance is less than first percentile of dist
zz.2 <- subset(zz.1, distance <= firstPercent & distance < dist + 3)
hist(zz.2$distance)
plot(zz.2$Comp.1~zz.2$f.anox.p)
hist(zz.1$f.anox.p)
hist(zz.2$f.anox.p)
d1 <- density(zz.2$f.anox.p)
d3 <- density(zz.2$D.anox)
d5 <- density(zz.2$dur.p)
d6 <- density(zz.2$f.anox.a)
#pdf("abc.parameters.density.pdf", h=8, w=6)
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 1))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black")
#dev.off()
#pdf("abc.parameters.scatterplot.pdf", h=6, w=6)
#par(mfrow=(c(2,2)), mar=c(4,4,1,1))
#plot(zz.2$f.anox.p~zz.2$D.anox, las=1, xlab="D.anox", ylab="f.anox.p")
#plot(zz.2$f.anox.p~zz.2$dur.p, las=1, xlab="dur.p", ylab="f.anox.p")
#plot(zz.2$D.anox~zz.2$dur.p, las=1, xlab="dur.p", ylab="D.anox")
#plot(zz.2$f.anox.a~zz.2$dur.p, las=1, xlab="dur.p", ylab="f.anox.a")
#dev.off()
rm(noiseFei)
rm(noiseKim)
### PLOT OUTPUT OF MODEL RUNS THAT ARE INCLUDED AFTER EPSILON FILTER
## WILL SHOW UNCERTAINTY IN THE TIME HISTORY
StratTimes <- 252500000 - times
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
U238.ocean.distance <- U238.ocean[,myvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.2,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)) {lines(U238.ocean.distance[,i]~StratTimes, cex=0.1, col=rgb(0, 0, 255, max = 255, alpha = 30))}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
firstPercent <- quantile(zz.1$dist, c(0.0020))
#Subset of ZZ1 where distance is less than first percentile of dist
zz.2 <- subset(zz.1, distance <= firstPercent & distance < dist + 3)
hist(zz.2$distance)
plot(zz.2$Comp.1~zz.2$f.anox.p)
hist(zz.1$f.anox.p)
hist(zz.2$f.anox.p)
d1 <- density(zz.2$f.anox.p)
d3 <- density(zz.2$D.anox)
d5 <- density(zz.2$dur.p)
d6 <- density(zz.2$f.anox.a)
#pdf("abc.parameters.density.pdf", h=8, w=6)
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 1))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black")
StratTimes <- 252500000 - times
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
U238.ocean.distance <- U238.ocean[,myvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.2,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)) {lines(U238.ocean.distance[,i]~StratTimes, cex=0.1, col=rgb(0, 0, 255, max = 255, alpha = 30))}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
firstPercent <- quantile(zz.1$dist, c(0.0010))
#Subset of ZZ1 where distance is less than first percentile of dist
zz.2 <- subset(zz.1, distance <= firstPercent & distance < dist + 3)
hist(zz.2$distance)
plot(zz.2$Comp.1~zz.2$f.anox.p)
hist(zz.1$f.anox.p)
hist(zz.2$f.anox.p)
d1 <- density(zz.2$f.anox.p)
d3 <- density(zz.2$D.anox)
d5 <- density(zz.2$dur.p)
d6 <- density(zz.2$f.anox.a)
#pdf("abc.parameters.density.pdf", h=8, w=6)
par(mfrow=(c(2,2)), mar=c(3,4,1,1))
plot(d1, main="f.anox.p", las=1, xlim = c(0.01, 1))
polygon(d1, col="red", border="black")
plot(d3, main="D.anox", las=1)
polygon(d3, col="red", border="black")
plot(d5, main="dur.p", las=1, xlim = c(-250000, 2000000))
polygon(d5, col="red", border="black")
plot(d6, main = "f.anox.a", las=1)
polygon(d6, col = "red", border = "black"
)
StratTimes <- 252500000 - times
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
U238.ocean.distance <- U238.ocean[,myvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.2,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)) {lines(U238.ocean.distance[,i]~StratTimes, cex=0.1, col=rgb(0, 0, 255, max = 255, alpha = 30))}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
load("~/Desktop/Model Runs/Rdata/50K_0to0.3vec.RData")
GuaAge
DajAge
load("~/Desktop/50K_0to30ALL3")
object <- read.delim(file.choose())
Ordovician <-read.csv((file.choose()))
OrdoScale <- read.csv(file.choose()
)
View(OrdoScale)
rm(OrdoScale)
#Hannahs Code
barplot(table(Ordovician$fad_int[Ordovician$class == "Strophomenata"]),
las = 1, col = "green 4", xlab = "Time Interval During the Ordovician", ylab = "Number of Genera")
View(Ordovician)
Ordovician <-read.csv((file.choose()))
View(Ordovician)
#Hannahs Code
barplot(table(Ordovician$fad_int[Ordovician$class == "Strophomenata"]),
las = 1, col = "green 4", xlab = "Time Interval During the Ordovician", ylab = "Number of Genera")
View(Ordovician)
Ordovician$fad_int[Ordovician$class == "Strophomenata"]
table(Ordovician$fad_int[Ordovician$class == "Strophomenata"])
table(Ordovician$fad_int[Ordovician$class == "Strophomenata"])
sort(table(Ordovician$fad_int[Ordovician$class == "Strophomenata"]))
tab <- Ordovician$fad_int[Ordovician$class == "Strophomenata"])
tab <- Ordovician$fad_int[Ordovician$class == "Strophomenata"]
tab
table(Ordovician$fad_int[Ordovician$class == "Strophomenata"])
TimescaleOrder <- c("Tremadocian","Floian","Dapingian","Darriwilian" ,"Sandbian", "Katian", "Rhuddanian" )
TimescaleOrder
smoke <- matrix(c(51,43,22,92,28,21,68,22,9),ncol=3,byrow=TRUE)
colnames(smoke) <- c("High","Low","Middle")
rownames(smoke) <- c("current","former","never")
smoke <- as.table(smoke)
smoke
barplot(smoke,
las = 1, col = "green 4", xlab = "Time Interval During the Ordovician", ylab = "Number of Genera")
TimescaleOrder <- c(Tremadocian,"Floian","Dapingian","Darriwilian" ,"Sandbian", "Katian", "Rhuddanian" )
OrderMatrix<- matrix(c(8,44,48,46,72,42,34),ncol=7,byrow=TRUE)
OrderMatrix
OrderTable
OrderTable <- matrix(c(8,44,48,46,72,42,34),ncol=7,byrow=TRUE)
colnames(OrderTable) <- TimescaleOrder
OrderTable
rownames(OrderTable) <- c("Appearences")
TimescaleOrder
OrderTable
OrderTable <- as.table(OrderTable)
OrderTable
barplot(OrderTable,las = 1, col = "green 4", xlab = "Time Interval During the Ordovician", ylab = "Number of Genera")
load("~/Desktop/Stanford/To Do/Model Runs/Rdata/20KALL_0to30vec.RData")
par(mfrow=(c(1,1)))
myvars <- rownames(zz.2)
allvars <- rownames(zz.1)
U238.ocean.distance <- U238.ocean[,allvars]
plot(U238.ocean.distance[,1]~ StratTimes, pch=1, cex=0.1, col="white", xlim = rev(c(250750000,252250000)), ylim=c(-1.5,0.2), las=1,
xlab="model years", ylab="d238U ocean")
for (i in 1:ncol(U238.ocean.distance)){
lines(U238.ocean.distance[,i]~StratTimes, cex=0.1,
col=rgb(200, 200,0, max = 255, alpha = 30))
}
allvars <- rownames(zz.1)
U238.ocean.distance <- U238.ocean[,myvars]
for (i in 1:ncol(U238.ocean.distance)){
lines(U238.ocean.distance[,i]~StratTimes, cex=0.1,
col=rgb(0, 0,200, max = 255, alpha = 30))
}
points(FeiAge2,FeiUfrac2,col = "green",pch = 19)
points(BoundaryAges,BoundaryUfrac,col = "red",pch = 19)
length(Udata$DAJAge)
Udata <- read_excel(file.choose())
library("readxl")
library("deSolve")
Udata <- read_excel(file.choose())
length(Udata$DAJAge)
View(Udata)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
format(Sys.Date(), '%B %d, %Y')
Sys.Date()
setwd("~/Documents/GitHub")
setwd("~/Documents/GitHub/WorkingD")
wd()
pwd()
setwd("~/Documents/GitHub/WorkingD")
